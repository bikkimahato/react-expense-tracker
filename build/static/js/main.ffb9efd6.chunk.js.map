{"version":3,"sources":["components/header/index.js","context/AppReducer.js","context/GlobalState.js","utils.js","components/balance/index.js","components/income-expenses/index.js","components/transaction/index.js","components/transaction-list/index.js","components/add-transaction/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","transactions","filter","el","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","transaction","moneyFormatter","num","p","toFixed","split","reverse","reduce","acc","i","orig","Balance","total","useContext","map","amount","item","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","Math","floor","random","htmlFor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffb9efd6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h2>Expense</h2>;\r\n};\r\n\r\nexport default Header;\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (el) => el.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n// Initial State\r\nconst initialState = {\r\n  transactions: [],\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({ type: \"DELETE_TRANSACTION\", payload: id });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({ type: \"ADD_TRANSACTION\", payload: transaction });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","//Money formatter function\r\nexport function moneyFormatter(num) {\r\n    let p = num.toFixed(2).split(\".\");\r\n    return (\r\n      \"$ \" +\r\n      p[0]\r\n        .split(\"\")\r\n        .reverse()\r\n        .reduce(function (acc, num, i, orig) {\r\n          return num === \"-\" ? acc : num + (i && !(i % 3) ? \",\" : \"\") + acc;\r\n        }, \"\") +\r\n      \".\" +\r\n      p[1]\r\n    );\r\n  }","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { moneyFormatter } from \"../../utils\";\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0);\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>{moneyFormatter(total)}</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { moneyFormatter } from \"../../utils\";\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0);\r\n\r\n  const expense =\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1;\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">{moneyFormatter(income)}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">{moneyFormatter(expense)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { moneyFormatter } from \"../../utils\";\r\n\r\nconst Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n      {transaction.text}\r\n      <span>\r\n        {sign}\r\n        {moneyFormatter(transaction.amount)}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport Transaction from \"../transaction\";\r\n\r\nconst TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n    addTransaction(newTransaction);\r\n    setText(\"\");\r\n    setAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import \"./App.css\";\nimport Header from \"./components/header\";\nimport Balance from \"./components/balance\";\nimport IncomeExpenses from \"./components/income-expenses\";\nimport TransactionList from \"./components/transaction-list\";\nimport AddTransaction from \"./components/add-transaction\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}